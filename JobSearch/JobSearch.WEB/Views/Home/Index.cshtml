@using System.Text.RegularExpressions
@using Humanizer
@using JobSearch.WEB.Models.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model JobSearch.WEB.Models.PagedListModel<VacancyModel>
@{
    var previousPage = Model.HasPreviousPage ? "" : "disabled";
    var nextPage = Model.HasNextPage ? "" : "disabled";
    var previousPageNumber = Model.PageNumber - 1;
    var nextPageNumber = Model.PageNumber + 1;
}

<div class="text-center">
    <form asp-controller="Home" asp-action="Index" method="get">
        <ul class="paging">
            <li class="search-group">
                <input class="form-control" type="text" name="searchString" value=@ViewData["SearchString"] />
                <input class="btn btn-primary" type="submit" value="Search" />
            </li>
            <li>
                <ul class="pagination">
                    <li class="page-item @previousPage">
                        @Html.ActionLink("<<", "Index", "Home", new { searchString = ViewData["SearchString"], pageNumber = previousPageNumber, pageSize = Model.PageSize }, new { @class = "page-link" })
                    </li>
                    @for (int page = 1; page <= Model.TotalPages; page++)
                    {
                        string isActive = (page == Model.PageNumber) ? "active" : "";
                        <li class="page-item @isActive">
                            @Html.ActionLink(page.ToString(), "Index", "Home", new { searchString = ViewData["SearchString"], pageNumber = page, pageSize = Model.PageSize }, new { @class = "page-link" })
                        </li>
                    }
                    <li class="page-item @nextPage">
                        @Html.ActionLink(">>", "Index", "Home", new { searchString = ViewData["SearchString"], pageNumber = nextPageNumber, pageSize = Model.PageSize }, new { @class = "page-link" })
                    </li>
                </ul>
            </li>
            <li>
                <select asp-for="PageSize"
                        name="pageSize"
                        asp-items="Html.GetEnumSelectList<PageSizeEnum>()"
                        class="form-select"
                        onchange="changePageSize(this)">
                </select>
            </li>
        </ul>
    </form>
    <div class="container">
        <div class="navigation"></div>
        <ul class="vacancies-list">
            @for (int vacancy = 0; vacancy < Model.ItemsPerPage; vacancy++)
            {
                <li class="vacancy-container">
                    <div>
                        <h5><a>@Model[vacancy].Title</a></h5>
                        <ul class="search-labels">
                            <li>@Model[vacancy].EmploymentTypeId.Humanize()</li>
                            <li>@Model[vacancy].ExperienceId.Humanize()</li>
                            <li>@Model[vacancy].FormatId.Humanize()</li>
                        </ul>
                    </div>
                    <p class="vacancy-description">
                        @Regex.Replace(Model[vacancy].Description, "<.*?>", String.Empty)
                    </p>
                    <form asp-controller="Info" asp-action="Details" asp-route-Id="@Model[vacancy].VacancyId" method="get">
                        <button type="submit" class="btn btn-info">@Resources.Resource.Button_ViewAndRespond</button>
                    </form>
                </li>
            }
        </ul>
    </div>
</div>

<script>
    let descriptions = document.querySelectorAll('.vacancy-description');
    descriptions.forEach(function (description) {
        if (description.textContent.length > 450) {
            description.textContent = description.textContent.substring(0, 450) + '...';
        }
    });

    function changePageSize(selectElement) {
        let actionLinkUrl = '@Url.Action("Index", "Home")' + '?pageNumber=' + @Model.PageNumber + '&pageSize=' + selectElement.value;
        window.location.href = actionLinkUrl;
    }
</script>
